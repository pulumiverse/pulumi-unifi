env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  PROVIDER: unifi
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_API: https://api.pulumi.com
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  PULUMI_TEST_OWNER: "pulumiverse"
  PYPI_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
  PYPI_USERNAME: "__token__"
  TRAVIS_OS_NAME: linux
  UNIFI_INSECURE: true
  UNIFI_API: https://localhost:8443
  UNIFI_USERNAME: pulumi-unifi-admin
  UNIFI_PASSWORD: pulumi-unifi-password
  DOTNETVERSION: |
      6.0.x
      3.1.301
  GOVERSION: 1.22.x
  GRADLEVERSION: "7.6"
  JAVAVERSION: "11"
  NODEVERSION: 20.x
  PYTHONVERSION: 3.11.8

jobs:
  build_sdk:
    name: build_sdk
    needs: prerequisites
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4
    - name: Checkout Scripts Repo
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4
      with:
        path: ci-scripts
        repository: jaxxstorm/scripts
        ref: third_party
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5
      with:
        go-version: ${{ env.GOVERSION }}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@25d5e2dd555cd74f1fab9ac1e6ea117acde2c0c4 # v1.12.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@b374ceb6168550de27c6eba92e01c1a774040e11 # v2
    - name: Setup Node
      uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4
      with:
        node-version: ${{ env.NODEVERSION }}
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: actions/setup-dotnet@3e891b0cb619bf60e2c25674b222b8940e2c1c25 # v4
      with:
        dotnet-version: ${{ env.DOTNETVERSION }}
    - name: Setup Python
      uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4
      with:
        python-version: ${{ env.PYTHONVERSION }}
    - name: Download provider + tfgen binaries
      uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3
      with:
        name: ${{ env.PROVIDER }}-provider.tar.gz
        path: ${{ github.workspace }}/bin
    - name: Untar provider binaries
      run: |-
        tar -zxf ${{ github.workspace }}/bin/provider.tar.gz -C ${{ github.workspace}}/bin
        find ${{ github.workspace }} -name "pulumi-*-${{ env.PROVIDER }}" -print -exec chmod +x {} \;
    - name: Install plugins
      run: make install_plugins
    - name: Update path
      run: echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
    - name: Build SDK
      run: make build_${{ matrix.language }}
    - name: Check worktree clean
      run: ./ci-scripts/ci/check-worktree-is-clean
    - name: Compress SDK folder
      run: tar -zcf sdk/${{ matrix.language }}.tar.gz -C sdk/${{ matrix.language }}
        .
    - name: Upload artifacts
      uses: actions/upload-artifact@ff15f0306b3f739f7b6fd43fb5d26cd321bd4de5 # v3
      with:
        name: ${{ matrix.language  }}-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/${{ matrix.language }}.tar.gz
    strategy:
      fail-fast: true
      matrix:
        language:
        - nodejs
        - python
        - dotnet
        - go

  prerequisites:
    name: prerequisites
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4
    - name: Checkout Scripts Repo
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4
      with:
        path: ci-scripts
        repository: jaxxstorm/scripts
        ref: third_party
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5
      with:
        go-version: ${{ env.GOVERSION }}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@25d5e2dd555cd74f1fab9ac1e6ea117acde2c0c4 # v1.12.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@b374ceb6168550de27c6eba92e01c1a774040e11 # v2
    - if: github.event_name == 'pull_request'
      name: Install Schema Tools
      uses: jaxxstorm/action-install-gh-release@25d5e2dd555cd74f1fab9ac1e6ea117acde2c0c4 # v1.12.0
      with:
        repo: mikhailshilkov/schema-tools
    - name: Build tfgen & provider binaries
      run: make provider
    # - if: github.event_name == 'pull_request'
    #   name: Check Schema is Valid
    #   run: |-
    #     echo 'SCHEMA_CHANGES<<EOF' >> $GITHUB_ENV
    #     schema-tools compare ${{ env.PROVIDER }} master --local-path=provider/cmd/pulumi-resource-${{ env.PROVIDER }}/schema.json >> $GITHUB_ENV
    #     echo 'EOF' >> $GITHUB_ENV
    # - if: github.event_name == 'pull_request'
    #   name: Comment on PR with Details of Schema Check
    #   uses: thollander/actions-comment-pull-request@1.0.1
    #   with:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     message: |
    #       ### Does the PR have any schema changes?

    #       ${{ env.SCHEMA_CHANGES }}
    - name: Tar provider binaries
      run: tar -zcf ${{ github.workspace }}/bin/provider.tar.gz -C ${{ github.workspace
        }}/bin/ pulumi-resource-${{ env.PROVIDER }} pulumi-tfgen-${{ env.PROVIDER
        }}
    - name: Upload artifacts
      uses: actions/upload-artifact@ff15f0306b3f739f7b6fd43fb5d26cd321bd4de5 # v3
      with:
        name: ${{ env.PROVIDER }}-provider.tar.gz
        path: ${{ github.workspace }}/bin/provider.tar.gz
    strategy:
      fail-fast: true

  test:
    name: test
    needs: build_sdk
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4
    - name: Checkout Scripts Repo
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4
      with:
        path: ci-scripts
        repository: jaxxstorm/scripts
        ref: third_party
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5
      with:
        go-version: ${{ env.GOVERSION }}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@25d5e2dd555cd74f1fab9ac1e6ea117acde2c0c4 # v1.12.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@b374ceb6168550de27c6eba92e01c1a774040e11 # v2
    - name: Setup Node
      uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4
      with:
        node-version: ${{ env.NODEVERSION }}
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: actions/setup-dotnet@3e891b0cb619bf60e2c25674b222b8940e2c1c25 # v4
      with:
        dotnet-version: ${{ env.DOTNETVERSION }}
    - name: Setup Python
      uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4
      with:
        python-version: ${{ env.PYTHONVERSION }}
    - name: Download provider + tfgen binaries
      uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3
      with:
        name: ${{ env.PROVIDER }}-provider.tar.gz
        path: ${{ github.workspace }}/bin
    - name: Untar provider binaries
      run: |-
        tar -zxf ${{ github.workspace }}/bin/provider.tar.gz -C ${{ github.workspace}}/bin
        find ${{ github.workspace }} -name "pulumi-*-${{ env.PROVIDER }}" -print -exec chmod +x {} \;
    - run: dotnet nuget add source ${{ github.workspace }}/nuget
    - name: Download SDK
      uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3
      with:
        name: ${{ matrix.language }}-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: Uncompress SDK folder
      run: tar -zxf ${{ github.workspace }}/sdk/${{ matrix.language }}.tar.gz -C ${{
        github.workspace }}/sdk/${{ matrix.language }}
    - name: Update path
      run: echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
    - name: Install Python deps
      run: |-
        pip3 install virtualenv==20.0.23
        pip3 install pipenv
    - name: Install dependencies
      run: make install_${{ matrix.language}}_sdk
    - name: Bootstrap controller
      run: make test_setup
    - name: Run tests
      run: cd examples && go test -v -count=1 -cover -timeout 2h -tags=${{ matrix.language }} -parallel 4 .
    - name: Shutdown controller
      if: ${{ always() }}
      run: make test_teardown
    strategy:
      fail-fast: true
      matrix:
        language:
        - nodejs
        - python
        - dotnet
        - go

permissions:
  contents: write

name: main
"on":
  push:
    branches:
    - main
    paths-ignore:
    - CHANGELOG.md
    tags-ignore:
    - v*
    - sdk/*
    - '**'
  pull_request:
