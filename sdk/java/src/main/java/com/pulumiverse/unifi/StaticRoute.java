// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.unifi;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumiverse.unifi.StaticRouteArgs;
import com.pulumiverse.unifi.Utilities;
import com.pulumiverse.unifi.inputs.StaticRouteState;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * `unifi.StaticRoute` manages a static route.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.unifi.StaticRoute;
 * import com.pulumi.unifi.StaticRouteArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var nexthop = new StaticRoute(&#34;nexthop&#34;, StaticRouteArgs.builder()
 *             .type(&#34;nexthop-route&#34;)
 *             .network(&#34;172.17.0.0/16&#34;)
 *             .distance(1)
 *             .nextHop(&#34;172.16.0.1&#34;)
 *             .build());
 * 
 *         var blackhole = new StaticRoute(&#34;blackhole&#34;, StaticRouteArgs.builder()
 *             .type(&#34;blackhole&#34;)
 *             .network(var_.blackhole_cidr())
 *             .distance(1)
 *             .build());
 * 
 *         var interface_ = new StaticRoute(&#34;interface&#34;, StaticRouteArgs.builder()
 *             .type(&#34;interface-route&#34;)
 *             .network(var_.wan2_cidr())
 *             .distance(1)
 *             .interface_(&#34;WAN2&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="unifi:index/staticRoute:StaticRoute")
public class StaticRoute extends com.pulumi.resources.CustomResource {
    /**
     * The distance of the static route.
     * 
     */
    @Export(name="distance", refs={Integer.class}, tree="[0]")
    private Output<Integer> distance;

    /**
     * @return The distance of the static route.
     * 
     */
    public Output<Integer> distance() {
        return this.distance;
    }
    /**
     * The interface of the static route (only valid for `interface-route` type). This can be `WAN1`, `WAN2`, or a network ID.
     * 
     */
    @Export(name="interface", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interface_;

    /**
     * @return The interface of the static route (only valid for `interface-route` type). This can be `WAN1`, `WAN2`, or a network ID.
     * 
     */
    public Output<Optional<String>> interface_() {
        return Codegen.optional(this.interface_);
    }
    /**
     * The name of the static route.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the static route.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The network subnet address.
     * 
     */
    @Export(name="network", refs={String.class}, tree="[0]")
    private Output<String> network;

    /**
     * @return The network subnet address.
     * 
     */
    public Output<String> network() {
        return this.network;
    }
    /**
     * The next hop of the static route (only valid for `nexthop-route` type).
     * 
     */
    @Export(name="nextHop", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> nextHop;

    /**
     * @return The next hop of the static route (only valid for `nexthop-route` type).
     * 
     */
    public Output<Optional<String>> nextHop() {
        return Codegen.optional(this.nextHop);
    }
    /**
     * The name of the site to associate the static route with.
     * 
     */
    @Export(name="site", refs={String.class}, tree="[0]")
    private Output<String> site;

    /**
     * @return The name of the site to associate the static route with.
     * 
     */
    public Output<String> site() {
        return this.site;
    }
    /**
     * The type of static route. Can be `interface-route`, `nexthop-route`, or `blackhole`.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of static route. Can be `interface-route`, `nexthop-route`, or `blackhole`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StaticRoute(String name) {
        this(name, StaticRouteArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StaticRoute(String name, StaticRouteArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StaticRoute(String name, StaticRouteArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("unifi:index/staticRoute:StaticRoute", name, args == null ? StaticRouteArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private StaticRoute(String name, Output<String> id, @Nullable StaticRouteState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("unifi:index/staticRoute:StaticRoute", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StaticRoute get(String name, Output<String> id, @Nullable StaticRouteState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StaticRoute(name, id, state, options);
    }
}
