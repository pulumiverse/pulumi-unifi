// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.unifi.iam;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.unifi.Utilities;
import com.pulumi.unifi.iam.UserArgs;
import com.pulumi.unifi.iam.inputs.UserState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * `unifi.iam.User` manages a user (or &#34;client&#34; in the UI) of the network, these are identified by unique MAC addresses.
 * 
 * Users are created in the controller when observed on the network, so the resource defaults to allowing itself to just take over management of a MAC address, but this can be turned off.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.unifi.iam.User;
 * import com.pulumi.unifi.iam.UserArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new User(&#34;test&#34;, UserArgs.builder()        
 *             .mac(&#34;01:23:45:67:89:AB&#34;)
 *             .note(&#34;my note&#34;)
 *             .fixedIp(&#34;10.0.0.50&#34;)
 *             .networkId(unifi_network.my_vlan().id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="unifi:iam/user:User")
public class User extends com.pulumi.resources.CustomResource {
    /**
     * Specifies whether this resource should just take over control of an existing user. Defaults to `true`.
     * 
     */
    @Export(name="allowExisting", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> allowExisting;

    /**
     * @return Specifies whether this resource should just take over control of an existing user. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> allowExisting() {
        return Codegen.optional(this.allowExisting);
    }
    /**
     * Specifies whether this user should be blocked from the network.
     * 
     */
    @Export(name="blocked", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> blocked;

    /**
     * @return Specifies whether this user should be blocked from the network.
     * 
     */
    public Output<Optional<Boolean>> blocked() {
        return Codegen.optional(this.blocked);
    }
    /**
     * Override the device fingerprint.
     * 
     */
    @Export(name="devIdOverride", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> devIdOverride;

    /**
     * @return Override the device fingerprint.
     * 
     */
    public Output<Optional<Integer>> devIdOverride() {
        return Codegen.optional(this.devIdOverride);
    }
    /**
     * A fixed IPv4 address for this user.
     * 
     */
    @Export(name="fixedIp", type=String.class, parameters={})
    private Output</* @Nullable */ String> fixedIp;

    /**
     * @return A fixed IPv4 address for this user.
     * 
     */
    public Output<Optional<String>> fixedIp() {
        return Codegen.optional(this.fixedIp);
    }
    /**
     * The hostname of the user.
     * 
     */
    @Export(name="hostname", type=String.class, parameters={})
    private Output<String> hostname;

    /**
     * @return The hostname of the user.
     * 
     */
    public Output<String> hostname() {
        return this.hostname;
    }
    /**
     * The IP address of the user.
     * 
     */
    @Export(name="ip", type=String.class, parameters={})
    private Output<String> ip;

    /**
     * @return The IP address of the user.
     * 
     */
    public Output<String> ip() {
        return this.ip;
    }
    /**
     * The MAC address of the user.
     * 
     */
    @Export(name="mac", type=String.class, parameters={})
    private Output<String> mac;

    /**
     * @return The MAC address of the user.
     * 
     */
    public Output<String> mac() {
        return this.mac;
    }
    /**
     * The name of the user.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the user.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The network ID for this user.
     * 
     */
    @Export(name="networkId", type=String.class, parameters={})
    private Output</* @Nullable */ String> networkId;

    /**
     * @return The network ID for this user.
     * 
     */
    public Output<Optional<String>> networkId() {
        return Codegen.optional(this.networkId);
    }
    /**
     * A note with additional information for the user.
     * 
     */
    @Export(name="note", type=String.class, parameters={})
    private Output</* @Nullable */ String> note;

    /**
     * @return A note with additional information for the user.
     * 
     */
    public Output<Optional<String>> note() {
        return Codegen.optional(this.note);
    }
    /**
     * The name of the site to associate the user with.
     * 
     */
    @Export(name="site", type=String.class, parameters={})
    private Output<String> site;

    /**
     * @return The name of the site to associate the user with.
     * 
     */
    public Output<String> site() {
        return this.site;
    }
    /**
     * Specifies whether this resource should tell the controller to &#34;forget&#34; the user on destroy. Defaults to `false`.
     * 
     */
    @Export(name="skipForgetOnDestroy", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> skipForgetOnDestroy;

    /**
     * @return Specifies whether this resource should tell the controller to &#34;forget&#34; the user on destroy. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> skipForgetOnDestroy() {
        return Codegen.optional(this.skipForgetOnDestroy);
    }
    /**
     * The user group ID for the user.
     * 
     */
    @Export(name="userGroupId", type=String.class, parameters={})
    private Output</* @Nullable */ String> userGroupId;

    /**
     * @return The user group ID for the user.
     * 
     */
    public Output<Optional<String>> userGroupId() {
        return Codegen.optional(this.userGroupId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public User(String name) {
        this(name, UserArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public User(String name, UserArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public User(String name, UserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("unifi:iam/user:User", name, args == null ? UserArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private User(String name, Output<String> id, @Nullable UserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("unifi:iam/user:User", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static User get(String name, Output<String> id, @Nullable UserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new User(name, id, state, options);
    }
}
