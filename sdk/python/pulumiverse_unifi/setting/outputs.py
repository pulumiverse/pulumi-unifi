# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'MgmtSshKey',
]

@pulumi.output_type
class MgmtSshKey(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 type: _builtins.str,
                 comment: Optional[_builtins.str] = None,
                 key: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: Name of SSH key.
        :param _builtins.str type: Type of SSH key, e.g. ssh-rsa.
        :param _builtins.str comment: Comment.
        :param _builtins.str key: Public SSH key.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "type", type)
        if comment is not None:
            pulumi.set(__self__, "comment", comment)
        if key is not None:
            pulumi.set(__self__, "key", key)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Name of SSH key.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        Type of SSH key, e.g. ssh-rsa.
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter
    def comment(self) -> Optional[_builtins.str]:
        """
        Comment.
        """
        return pulumi.get(self, "comment")

    @_builtins.property
    @pulumi.getter
    def key(self) -> Optional[_builtins.str]:
        """
        Public SSH key.
        """
        return pulumi.get(self, "key")


