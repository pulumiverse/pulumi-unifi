// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package unifi

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-unifi/sdk/go/unifi/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "unifi:index/account:Account":
		r = &Account{}
	case "unifi:index/device:Device":
		r = &Device{}
	case "unifi:index/dynamicDNS:DynamicDNS":
		r = &DynamicDNS{}
	case "unifi:index/network:Network":
		r = &Network{}
	case "unifi:index/radiusProfile:RadiusProfile":
		r = &RadiusProfile{}
	case "unifi:index/site:Site":
		r = &Site{}
	case "unifi:index/staticRoute:StaticRoute":
		r = &StaticRoute{}
	case "unifi:index/wlan:Wlan":
		r = &Wlan{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:unifi" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"unifi",
		"index/account",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"unifi",
		"index/device",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"unifi",
		"index/dynamicDNS",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"unifi",
		"index/network",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"unifi",
		"index/radiusProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"unifi",
		"index/site",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"unifi",
		"index/staticRoute",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"unifi",
		"index/wlan",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"unifi",
		&pkg{version},
	)
}
