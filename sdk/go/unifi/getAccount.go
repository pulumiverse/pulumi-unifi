// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package unifi

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-unifi/sdk/go/unifi/internal"
)

// `Account` data source can be used to retrieve RADIUS user accounts
func LookupAccount(ctx *pulumi.Context, args *LookupAccountArgs, opts ...pulumi.InvokeOption) (*LookupAccountResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAccountResult
	err := ctx.Invoke("unifi:index/getAccount:getAccount", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccount.
type LookupAccountArgs struct {
	// The name of the account to look up
	Name string `pulumi:"name"`
	// The name of the site the account is associated with.
	Site *string `pulumi:"site"`
}

// A collection of values returned by getAccount.
type LookupAccountResult struct {
	// The ID of this account.
	Id string `pulumi:"id"`
	// The name of the account to look up
	Name string `pulumi:"name"`
	// ID of the network for this account
	NetworkId string `pulumi:"networkId"`
	// The password of the account.
	Password string `pulumi:"password"`
	// The name of the site the account is associated with.
	Site string `pulumi:"site"`
	// See RFC2868 section 3.2
	TunnelMediumType int `pulumi:"tunnelMediumType"`
	// See RFC2868 section 3.1
	TunnelType int `pulumi:"tunnelType"`
}

func LookupAccountOutput(ctx *pulumi.Context, args LookupAccountOutputArgs, opts ...pulumi.InvokeOption) LookupAccountResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAccountResultOutput, error) {
			args := v.(LookupAccountArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupAccountResult
			secret, err := ctx.InvokePackageRaw("unifi:index/getAccount:getAccount", args, &rv, "", opts...)
			if err != nil {
				return LookupAccountResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupAccountResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupAccountResultOutput), nil
			}
			return output, nil
		}).(LookupAccountResultOutput)
}

// A collection of arguments for invoking getAccount.
type LookupAccountOutputArgs struct {
	// The name of the account to look up
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the site the account is associated with.
	Site pulumi.StringPtrInput `pulumi:"site"`
}

func (LookupAccountOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountArgs)(nil)).Elem()
}

// A collection of values returned by getAccount.
type LookupAccountResultOutput struct{ *pulumi.OutputState }

func (LookupAccountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountResult)(nil)).Elem()
}

func (o LookupAccountResultOutput) ToLookupAccountResultOutput() LookupAccountResultOutput {
	return o
}

func (o LookupAccountResultOutput) ToLookupAccountResultOutputWithContext(ctx context.Context) LookupAccountResultOutput {
	return o
}

// The ID of this account.
func (o LookupAccountResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the account to look up
func (o LookupAccountResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.Name }).(pulumi.StringOutput)
}

// ID of the network for this account
func (o LookupAccountResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

// The password of the account.
func (o LookupAccountResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.Password }).(pulumi.StringOutput)
}

// The name of the site the account is associated with.
func (o LookupAccountResultOutput) Site() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.Site }).(pulumi.StringOutput)
}

// See RFC2868 section 3.2
func (o LookupAccountResultOutput) TunnelMediumType() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAccountResult) int { return v.TunnelMediumType }).(pulumi.IntOutput)
}

// See RFC2868 section 3.1
func (o LookupAccountResultOutput) TunnelType() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAccountResult) int { return v.TunnelType }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccountResultOutput{})
}
