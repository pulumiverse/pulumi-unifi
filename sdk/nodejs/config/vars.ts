// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("unifi");

/**
 * Skip verification of TLS certificates of API requests. You may need to set this to `true` if you are using your local
 * API without setting up a signed certificate. Can be specified with the `UNIFI_INSECURE` environment variable.
 */
export declare const allowInsecure: boolean | undefined;
Object.defineProperty(exports, "allowInsecure", {
    get() {
        return __config.getObject<boolean>("allowInsecure") ?? utilities.getEnvBoolean("UNIFI_INSECURE");
    },
    enumerable: true,
});

/**
 * URL of the controller API. Can be specified with the `UNIFI_API` environment variable. You should **NOT** supply the
 * path (`/api`), the SDK will discover the appropriate paths. This is to support UDM Pro style API paths as well as more
 * standard controller paths.
 */
export declare const apiUrl: string | undefined;
Object.defineProperty(exports, "apiUrl", {
    get() {
        return __config.get("apiUrl") ?? utilities.getEnv("UNIFI_API");
    },
    enumerable: true,
});

/**
 * Password for the user accessing the API. Can be specified with the `UNIFI_PASSWORD` environment variable.
 */
export declare const password: string | undefined;
Object.defineProperty(exports, "password", {
    get() {
        return __config.get("password") ?? utilities.getEnv("UNIFI_PASSWORD");
    },
    enumerable: true,
});

/**
 * The site in the Unifi controller this provider will manage. Can be specified with the `UNIFI_SITE` environment variable.
 * Default: `default`
 */
export declare const site: string | undefined;
Object.defineProperty(exports, "site", {
    get() {
        return __config.get("site") ?? utilities.getEnv("UNIFI_SITE");
    },
    enumerable: true,
});

/**
 * Local user name for the Unifi controller API. Can be specified with the `UNIFI_USERNAME` environment variable.
 */
export declare const username: string | undefined;
Object.defineProperty(exports, "username", {
    get() {
        return __config.get("username") ?? utilities.getEnv("UNIFI_USERNAME");
    },
    enumerable: true,
});

