// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * `unifi.iam.Group` manages a user group (called "client group" in the UI), which can be used to limit bandwidth for groups of users.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as unifi from "@pulumi/unifi";
 *
 * const wifi = new unifi.iam.Group("wifi", {
 *     qosRateMaxDown: 2000, // 2mbps
 *     qosRateMaxUp: 10, // 10kbps
 * });
 * ```
 *
 * ## Import
 *
 * import using the ID
 *
 * ```sh
 *  $ pulumi import unifi:iam/group:Group wifi 5fe6261995fe130013456a36
 * ```
 */
export class Group extends pulumi.CustomResource {
    /**
     * Get an existing Group resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GroupState, opts?: pulumi.CustomResourceOptions): Group {
        return new Group(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'unifi:iam/group:Group';

    /**
     * Returns true if the given object is an instance of Group.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Group {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Group.__pulumiType;
    }

    /**
     * The name of the user group.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The QOS maximum download rate. Defaults to `-1`.
     */
    public readonly qosRateMaxDown!: pulumi.Output<number | undefined>;
    /**
     * The QOS maximum upload rate. Defaults to `-1`.
     */
    public readonly qosRateMaxUp!: pulumi.Output<number | undefined>;
    /**
     * The name of the site to associate the user group with.
     */
    public readonly site!: pulumi.Output<string>;

    /**
     * Create a Group resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GroupArgs | GroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GroupState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["qosRateMaxDown"] = state ? state.qosRateMaxDown : undefined;
            resourceInputs["qosRateMaxUp"] = state ? state.qosRateMaxUp : undefined;
            resourceInputs["site"] = state ? state.site : undefined;
        } else {
            const args = argsOrState as GroupArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["qosRateMaxDown"] = args ? args.qosRateMaxDown : undefined;
            resourceInputs["qosRateMaxUp"] = args ? args.qosRateMaxUp : undefined;
            resourceInputs["site"] = args ? args.site : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Group.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Group resources.
 */
export interface GroupState {
    /**
     * The name of the user group.
     */
    name?: pulumi.Input<string>;
    /**
     * The QOS maximum download rate. Defaults to `-1`.
     */
    qosRateMaxDown?: pulumi.Input<number>;
    /**
     * The QOS maximum upload rate. Defaults to `-1`.
     */
    qosRateMaxUp?: pulumi.Input<number>;
    /**
     * The name of the site to associate the user group with.
     */
    site?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Group resource.
 */
export interface GroupArgs {
    /**
     * The name of the user group.
     */
    name?: pulumi.Input<string>;
    /**
     * The QOS maximum download rate. Defaults to `-1`.
     */
    qosRateMaxDown?: pulumi.Input<number>;
    /**
     * The QOS maximum upload rate. Defaults to `-1`.
     */
    qosRateMaxUp?: pulumi.Input<number>;
    /**
     * The name of the site to associate the user group with.
     */
    site?: pulumi.Input<string>;
}
